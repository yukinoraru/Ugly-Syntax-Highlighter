// Generated by CoffeeScript 1.3.1
(function() {
  var count_nl, expand_tab, nl2br, prettyUglify, rgb2hex, select_text;

  $(function() {
    $("#src").bind("textchange", function() {
      return prettyUglify();
    });
    $("#src").autoResize({
      maxHeight: 10000,
      animateDuration: 300,
      onAfterResize: function() {
        var newHeight;
        newHeight = $("#src").parent().height();
        return $("#dest").parent().height(newHeight);
      },
      animateCallback: function() {
        return $(this).css({
          opacity: 1
        });
      }
    });
    $("#select-button").click(function() {
      return select_text("dest");
    });
    return $("#showLineNumber").click(function() {
      return prettyUglify();
    });
  });

  prettyUglify = function() {
    var src, tmp;
    $("#working").show();
    src = $("#src").val();
    if ($("#showLineNumber").is(":checked")) {
      tmp = "";
      $.each(src.split("\n"), function(i, item) {
        return tmp += i + ": " + item + "\n";
      });
      src = tmp;
    }
    $("#working").text(src);
    $("#dest").html("");
    prettyPrint();
    return $.each($("#working").find("span"), function(i, item) {
      var class_name, color, text;
      class_name = $(this).attr("class");
      color = $("." + class_name).css("color");
      text = expand_tab($(this).text());
      if (nl2br(text) !== text) {
        text = nl2br(text.replace(RegExp(" ", "g"), "&nbsp;"));
      } else {
        text = $(this).text(text).html();
        text = text.replace(RegExp(" ", "g"), "&nbsp;");
      }
      return $("#dest").append("<font color=" + rgb2hex(color) + ">" + text + "</font>");
    });
  };

  expand_tab = function(text, n) {
    var repeat;
    if (n == null) {
      n = 4;
    }
    repeat = function(pattern, count) {
      var result;
      if (count < 1) {
        return "";
      }
      result = "";
      while (count > 0) {
        if (count & 1) {
          result += pattern;
        }
        count >>= 1;
        pattern += pattern;
      }
      return result;
    };
    return text.replace(RegExp("\t", "g"), repeat("&nbsp;", n));
  };

  nl2br = function(str, is_xhtml) {
    var breakTag;
    breakTag = (is_xhtml || typeof is_xhtml === "undefined" ? "<br />" : "<br>");
    return (str + "").replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, "$1" + breakTag + "$2");
  };

  rgb2hex = function(rgb) {
    var hex;
    hex = function(x) {
      return ("0" + parseInt(x).toString(16)).slice(-2);
    };
    rgb = rgb.match(/^rgb\((\d+),\s*(\d+),\s*(\d+)\)$/);
    return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
  };

  count_nl = function(str) {
    try {
      return (str.match(RegExp("([^>\r\n]?)(\r\n|\n\r|\r|\n)", "g")).length);
    } catch (e) {
      return 0;
    }
  };

  select_text = function(element) {
    var doc, range, selection, text;
    doc = document;
    text = doc.getElementById(element);
    if (doc.body.createTextRange) {
      range = document.body.createTextRange();
      range.moveToElementText(text);
      return range.select();
    } else if (window.getSelection) {
      selection = window.getSelection();
      range = document.createRange();
      range.selectNodeContents(text);
      selection.removeAllRanges();
      return selection.addRange(range);
    }
  };

}).call(this);
